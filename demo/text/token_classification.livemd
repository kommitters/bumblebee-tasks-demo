# Token classification

```elixir
Mix.install(
  [
    {:kino_bumblebee, "~> 0.3.0"},
    {:exla, "~> 0.5.1"}
  ],
  config: [nx: [default_backend: EXLA.Backend]]
)
```

## Using dslim/bert-base-NER model

<!-- livebook:{"attrs":{"aggregation":"same","compiler":"exla","sequence_length":100,"task_id":"token_classification","variant_id":"bert_base_cased_ner"},"chunks":[[0,327],[329,513]],"kind":"Elixir.KinoBumblebee.TaskCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, model_info} = Bumblebee.load_model({:hf, "dslim/bert-base-NER"})
{:ok, tokenizer} = Bumblebee.load_tokenizer({:hf, "bert-base-cased"})

serving =
  Bumblebee.Text.token_classification(model_info, tokenizer,
    aggregation: :same,
    compile: [batch_size: 1, sequence_length: 100],
    defn_options: [compiler: EXLA]
  )

text_input =
  Kino.Input.textarea("Text",
    default: "Rachel Green works at Ralph Lauren in New York City in the sitcom Friends."
  )

form = Kino.Control.form([text: text_input], submit: "Run")
frame = Kino.Frame.new()

Kino.listen(form, fn %{data: %{text: text}} ->
  Kino.Frame.render(frame, Kino.Text.new("Running..."))
  output = Nx.Serving.run(serving, text)
  Kino.Frame.render(frame, Kino.Bumblebee.HighlightedText.new(text, output.entities))
end)

Kino.Layout.grid([form, frame], boxed: true, gap: 16)
```

```elixir

```
